{"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import tensorflow as tf\n","import matplotlib.pyplot as plt\n","import re\n","import string\n","from sklearn.model_selection import train_test_split \n","from keras import regularizers\n","\n","\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","from tensorflow.keras.layers import Dense, Input, GlobalMaxPooling1D\n","from tensorflow.keras.layers import Conv1D, MaxPooling1D, Embedding\n","from tensorflow.keras.layers import LSTM, GRU, SimpleRNN, Embedding\n","from tensorflow.keras.layers import SpatialDropout1D, Conv1D, Bidirectional, LSTM, Dense, Input, Dropout, GlobalMaxPooling1D\n","from keras.models import Sequential\n","from tensorflow.keras.callbacks import ModelCheckpoint, ReduceLROnPlateau, EarlyStopping\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.losses import SparseCategoricalCrossentropy\n"],"metadata":{"id":"aNc_XWkD6xfY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive \n","drive.mount('/content/gdrive')"],"metadata":{"id":"H2ptYp19VlcU","executionInfo":{"status":"ok","timestamp":1685303578227,"user_tz":-180,"elapsed":27418,"user":{"displayName":"George Reda","userId":"04005153239242881646"}},"outputId":"32e58811-76d8-4af4-b5f4-927141686f42","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","source":["LABR = pd.read_csv(r'/content/gdrive/MyDrive/Final_Dataset.tsv',delimiter='\\t')"],"metadata":{"id":"GSQa1w5fVlfM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = LABR\n","\n","\"\"\"**printing the first 3 rows of the data**\"\"\"\n","\n","data.head(3)"],"metadata":{"id":"oZ4j0jeMVliE","executionInfo":{"status":"ok","timestamp":1685303580265,"user_tz":-180,"elapsed":20,"user":{"displayName":"George Reda","userId":"04005153239242881646"}},"outputId":"4203ecf1-df98-4222-c69d-9a2736b7985a","colab":{"base_uri":"https://localhost:8080/","height":140}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Label                                               Text\n","0      4  من أمتع ما قرأت من روايات بلا شك. وحول الشك تد...\n","1      4   رواية تتخذ من التاريخ ،جوًا لها اختار المؤلف ...\n","2      1   إني أقدّر هذه الرواية كثيرا، لسبب مختلف عن أس..."],"text/html":["\n","  <div id=\"df-d4bcf0cf-5d3a-46d1-b0ca-d57d18c1f960\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Label</th>\n","      <th>Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>من أمتع ما قرأت من روايات بلا شك. وحول الشك تد...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>رواية تتخذ من التاريخ ،جوًا لها اختار المؤلف ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>إني أقدّر هذه الرواية كثيرا، لسبب مختلف عن أس...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4bcf0cf-5d3a-46d1-b0ca-d57d18c1f960')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d4bcf0cf-5d3a-46d1-b0ca-d57d18c1f960 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d4bcf0cf-5d3a-46d1-b0ca-d57d18c1f960');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["print(\"Data contient {} lignes et {} colonnes.\".format(data.shape[0], data.shape[1]))"],"metadata":{"id":"Ej3heXWcVllL","executionInfo":{"status":"ok","timestamp":1685303580266,"user_tz":-180,"elapsed":17,"user":{"displayName":"George Reda","userId":"04005153239242881646"}},"outputId":"474ca8e8-db20-4ca2-f1bc-b400bf7e8ad4","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Data contient 63256 lignes et 2 colonnes.\n"]}]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"id":"15Dk-h8oVlny","executionInfo":{"status":"ok","timestamp":1685303580266,"user_tz":-180,"elapsed":12,"user":{"displayName":"George Reda","userId":"04005153239242881646"}},"outputId":"79a45c09-ec6a-46f0-90af-67cd0d6196ca","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Label    0\n","Text     0\n","dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["print(\"On a  {} doublons dans Data.\".format(data.duplicated().sum()))\n","\n","data.drop_duplicates(inplace = True)\n","\n","print(\"On a  {} doublons dans Data.\".format(data.duplicated().sum()))"],"metadata":{"id":"6jwjPE7MVluq","executionInfo":{"status":"ok","timestamp":1685303580651,"user_tz":-180,"elapsed":391,"user":{"displayName":"George Reda","userId":"04005153239242881646"}},"outputId":"28e2a36e-12e3-4e84-dccf-cd527c8dd4fd","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["On a  3030 doublons dans Data.\n","On a  0 doublons dans Data.\n"]}]},{"cell_type":"code","source":["positive_reviews = data[data[\"Label\"] > 3]\n","positive_reviews[\"sentiment\"] = 1\n","\n","negative_reviews = data[data[\"Label\"] < 3]\n","negative_reviews[\"sentiment\"] = 0\n","\n","data = pd.concat([positive_reviews, negative_reviews], ignore_index = True)\n"],"metadata":{"id":"_1iFpOzOVlx9","executionInfo":{"status":"ok","timestamp":1685303580652,"user_tz":-180,"elapsed":12,"user":{"displayName":"George Reda","userId":"04005153239242881646"}},"outputId":"3ee281fe-2eb2-4166-ea62-e831ba515020","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-9-7a9fa9191a23>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  positive_reviews[\"sentiment\"] = 1\n","<ipython-input-9-7a9fa9191a23>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  negative_reviews[\"sentiment\"] = 0\n"]}]},{"cell_type":"code","source":["def compte_mots(phrase):\n","    return len(str(phrase).split())\n"],"metadata":{"id":"-SmfFbKOV5lc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data[\"len_review\"] = data[\"Text\"].apply(compte_mots)\n","positive_reviews['len_review'] = positive_reviews[\"Text\"].apply(compte_mots)\n","negative_reviews['len_review'] = negative_reviews[\"Text\"].apply(compte_mots)\n"],"metadata":{"id":"IPeUcHAtV5oh","executionInfo":{"status":"ok","timestamp":1685303581045,"user_tz":-180,"elapsed":397,"user":{"displayName":"George Reda","userId":"04005153239242881646"}},"outputId":"70772281-a017-46b9-828c-1c06b827e8c0","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-11-420b95cd919b>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  positive_reviews['len_review'] = positive_reviews[\"Text\"].apply(compte_mots)\n","<ipython-input-11-420b95cd919b>:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  negative_reviews['len_review'] = negative_reviews[\"Text\"].apply(compte_mots)\n"]}]},{"cell_type":"code","source":["print(\"Le maximum de mots utilisé dans les reviews positives est :\", max(positive_reviews.len_review))\n","print(\"Le moyen de mots utilisé dans les reviews positives est :\", np.mean(positive_reviews.len_review))\n","print(\"-------------------------------------------------------------------------------------------------------\")\n","print(\"Le maximum de mots utilisé dans les reviews négatives est :\", max(negative_reviews.len_review))\n","print(\"Le moyen de mots utilisé dans les reviews négatives est :\", np.mean(negative_reviews.len_review))\n"],"metadata":{"id":"moE3S2gqV5rp","executionInfo":{"status":"ok","timestamp":1685303581045,"user_tz":-180,"elapsed":12,"user":{"displayName":"George Reda","userId":"04005153239242881646"}},"outputId":"8c88c982-7155-427f-fa3d-a59ff4c58936","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Le maximum de mots utilisé dans les reviews positives est : 3419\n","Le moyen de mots utilisé dans les reviews positives est : 63.92189538461538\n","-------------------------------------------------------------------------------------------------------\n","Le maximum de mots utilisé dans les reviews négatives est : 1535\n","Le moyen de mots utilisé dans les reviews négatives est : 60.65378768685077\n"]}]},{"cell_type":"code","source":["\n","data.head(3)\n","df=data\n","\n"],"metadata":{"id":"l3FS9BU_V5ug"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def preprocessing(x):\n","    x = re.sub('@[^\\s]+', ' ', x)\n","    x = re.sub('((www\\.[^\\s]+)|(https?://[^\\s]+))',' ',x)\n","\n","    emoji_pattern = re.compile(\"[\"\n","                               u\"\\U0001F600-\\U0001F64F\"  # emoticons\n","                               u\"\\U0001F300-\\U0001F5FF\"  # symbols & pictographs\n","                               u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n","                               u\"\\U0001F1E0-\\U0001F1FF\"  # flags (iOS)\n","                               u\"\\U00002500-\\U00002BEF\"  # chinese char\n","                               u\"\\U00002702-\\U000027B0\"\n","                               u\"\\U00002702-\\U000027B0\"\n","                               u\"\\U000024C2-\\U0001F251\"\n","                               u\"\\U0001f926-\\U0001f937\"\n","                               u\"\\U00010000-\\U0010ffff\"\n","                               u\"\\u2640-\\u2642\"\n","                               u\"\\u2600-\\u2B55\"\n","                               u\"\\u200d\"\n","                               u\"\\u23cf\"\n","                               u\"\\u23e9\"\n","                               u\"\\u231a\"\n","                               u\"\\ufe0f\"  # dingbats\n","                               u\"\\u3030\"\"]+\", flags=re.UNICODE)\n","    emoji_pattern.sub(r'', x)\n","\n","    ar_punctuations = '''`÷×؛<>_()*&^%][ـ،/:\"؟.,'{}~¦+|!”…“–ـ#'''\n","    en_punctuations = string.punctuation\n","    punctuations = ar_punctuations + en_punctuations\n","    x = x.translate(str.maketrans('', '', punctuations))\n","\n","    arabic_diacritics = re.compile(\"\"\" ّ    | # Tashdid\n","                             َ    | # Fatha\n","                             ً    | # Tanwin Fath\n","                             ُ    | # Damma\n","                             ٌ    | # Tanwin Damm\n","                             ِ    | # Kasra\n","                             ٍ    | # Tanwin Kasr\n","                             ْ    | # Sukun\n","                             ـ     # Tatwil/Kashida\n","                         \"\"\", re.VERBOSE)\n","    x = re.sub(arabic_diacritics, '', str(x)) \n","\n","#     x = re.sub(\"[إأآا]\", \"ا\", x)\n","#     x = re.sub(\"ى\", \"ي\", x)\n","#     x = re.sub(\"ة\", \"ه\", x)\n","#     x = re.sub(\"گ\", \"ك\", x)\n","#     x = re.sub(r'(.)\\1+', r'\\1', x)\n","\n","    return x\n"],"metadata":{"id":"iUbzpCTKV5xa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data[\"Clean_reviews\"] = data.Text.apply(lambda x: preprocessing(str(x)))"],"metadata":{"id":"grrrZbptV50P"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('- Avant le prétraitement \\n\\n',data[\"Text\"][4])\n","print(\"\\n-----------------------------------------------\\n\")\n","print('- Après le prétraitement \\n\\n',data[\"Clean_reviews\"][4])"],"metadata":{"id":"n20r3-vsV53G","executionInfo":{"status":"ok","timestamp":1685303585991,"user_tz":-180,"elapsed":14,"user":{"displayName":"George Reda","userId":"04005153239242881646"}},"outputId":"3a63e15a-a675-4b1e-edfc-2e387d4448ee","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["- Avant le prétraitement \n","\n","  هذا هو الأدب . هذه هي الرواية !\n","\n","-----------------------------------------------\n","\n","- Après le prétraitement \n","\n","  هذا هو الأدب  هذه هي الرواية \n"]}]},{"cell_type":"code","source":["X = data.Clean_reviews\n","y = data.sentiment"],"metadata":{"id":"st_GCkrlV55v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, \n","                                                    y, \n","                                                    test_size = 0.20, \n","                                                    random_state = 42)\n","\n","\"\"\"**printing the number of the train set and the test set**\"\"\"\n","\n","print('Train set', X_train.shape)\n","print('Test set', X_test.shape)\n"],"metadata":{"id":"s5nd4zw1V58k","executionInfo":{"status":"ok","timestamp":1685303585991,"user_tz":-180,"elapsed":10,"user":{"displayName":"George Reda","userId":"04005153239242881646"}},"outputId":"3a542df5-cedc-4ab7-ab93-a04f9cde437b","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train set (38815,)\n","Test set (9704,)\n"]}]},{"cell_type":"code","source":["MAX_VOCAB_SIZE=250000\n","tokenizer=Tokenizer(num_words=MAX_VOCAB_SIZE,filters='!\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~\\t\\n')\n","tokenizer.fit_on_texts(X_train)\n"],"metadata":{"id":"2DlLPzN4WORa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["word_index = tokenizer.word_index\n","vocab_size = len(tokenizer.word_index) + 1"],"metadata":{"id":"LzA__6f8WOUf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["MAX_SEQUENCE_LENGTH = 3456\n","# \n","X_train = pad_sequences(tokenizer.texts_to_sequences(X_train),\n","                         maxlen = MAX_SEQUENCE_LENGTH)\n","X_test = pad_sequences(tokenizer.texts_to_sequences(X_test),\n","                        maxlen = MAX_SEQUENCE_LENGTH)\n","# "],"metadata":{"id":"QjRugi4gWOXp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import gensim\n","Embedding_dim=300\n","file='/content/gdrive/MyDrive/tweet_cbow_300/tweets_cbow_300'\n","!iconv -f ISO-8859-1 -t UTF-8 /content/gdrive/MyDrive/tweet_cbow_300/tweets_cbow_300> /content/gdrive/MyDrive/tweets_utf8.txt\n","file_utf8 = '/content/gdrive/MyDrive/tweets_utf8.txt'\n","# Initialize an empty embeddings index dictionary\n","EMBEDDINGS_MATRIX = np.zeros ((vocab_size+1, Embedding_dim)) #EMBEDDINGS MATRIX-11\n","model = gensim.models.Word2Vec.load(file)\n","for word, i in word_index.items():\n","  embedding_vector = None\n","  if word != \"<OOV>\":\n","    if word in model.wv:\n","      embedding_vector = model.wv[word]\n","EMBEDDINGS_MATRIX[i] = embedding_vector"],"metadata":{"id":"xhgrYPIbWOaO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["EMBEDDINGS_MATRIX = np.nan_to_num(EMBEDDINGS_MATRIX)"],"metadata":{"id":"hY8kMv4OWOdW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = Sequential()\n","embedding_layer = Embedding(vocab_size +1 , \n","                            300, \n","                            weights = [EMBEDDINGS_MATRIX], \n","                            input_length = MAX_SEQUENCE_LENGTH, \n","                            trainable=False)\n","model.add(embedding_layer)\n","model.add(Conv1D(filters=300, kernel_size=2, activation='relu'))\n","model.add(Bidirectional(LSTM(128, dropout=0.2, return_sequences=True)))\n","model.add(GlobalMaxPooling1D())\n","model.add(Dropout(0.2))\n","model.add(Dense(1, activation='sigmoid'))"],"metadata":{"id":"ZMg6sHsIWOf9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["es = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=3)\n","model.compile(optimizer = Adam(learning_rate=0.0001), \n","              loss = 'binary_crossentropy',\n","              metrics = ['accuracy'])"],"metadata":{"id":"luQiR3X_Vl1E"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["r = model.fit(\n","  X_train,\n","  y_train,\n","  batch_size = 64,\n","  epochs=20,\n","  validation_data=(X_test, y_test),\n","  callbacks=[es]\n",")"],"metadata":{"id":"07iKSdDwVl3r","executionInfo":{"status":"ok","timestamp":1685305891734,"user_tz":-180,"elapsed":2272064,"user":{"displayName":"George Reda","userId":"04005153239242881646"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"3866fa16-b8b4-4bf2-be8a-f9b138ad9e86"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/20\n","607/607 [==============================] - 335s 526ms/step - loss: 0.4664 - accuracy: 0.8360 - val_loss: 0.4447 - val_accuracy: 0.8370\n","Epoch 2/20\n","607/607 [==============================] - 315s 519ms/step - loss: 0.4455 - accuracy: 0.8374 - val_loss: 0.4449 - val_accuracy: 0.8370\n","Epoch 3/20\n","607/607 [==============================] - 331s 545ms/step - loss: 0.4449 - accuracy: 0.8374 - val_loss: 0.4447 - val_accuracy: 0.8370\n","Epoch 4/20\n","607/607 [==============================] - 330s 543ms/step - loss: 0.4448 - accuracy: 0.8374 - val_loss: 0.4447 - val_accuracy: 0.8370\n","Epoch 5/20\n","607/607 [==============================] - 330s 544ms/step - loss: 0.4450 - accuracy: 0.8374 - val_loss: 0.4447 - val_accuracy: 0.8370\n","Epoch 6/20\n","607/607 [==============================] - 315s 519ms/step - loss: 0.4453 - accuracy: 0.8374 - val_loss: 0.4449 - val_accuracy: 0.8370\n","Epoch 7/20\n","607/607 [==============================] - 317s 522ms/step - loss: 0.4451 - accuracy: 0.8374 - val_loss: 0.4450 - val_accuracy: 0.8370\n","Epoch 7: early stopping\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"cBnjNV8SVl6i"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"toc_visible":true,"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1683169556032}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"accelerator":"GPU","gpuClass":"standard"},"nbformat":4,"nbformat_minor":0}